{"mappings":"AAAI,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,cAAc,SAASC,iBAAiB,UAAWC,IAC1DA,EAAMC,iBAEN,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBACrCO,EAAaR,SAASS,eAAe,WAErCC,EAAaC,SAASN,EAAWO,OACjCC,EAAOF,SAASL,EAAUM,OAC1BE,EAASH,SAASJ,EAAYK,OAEpC,IAAIG,EAAQL,EACZ,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,IAC3B1B,EAAc0B,EAAGD,GACdE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB,MAAM0B,EAASlB,SAASmB,cAAc,KACtCD,EAAOE,YAAc,uBAAqB7B,QAAiBC,MACzDgB,EAASa,YAAYH,GAEvBnB,YAAW,KACTmB,EAAOI,QAAQ,GACd,IAAK,IAETC,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB,MAAM0B,EAASlB,SAASmB,cAAc,KACtCD,EAAOE,YAAc,sBAAoB7B,QAAiBC,MACxDgB,EAASa,YAAYH,GAEvBnB,YAAW,KACTmB,EAAOI,QAAQ,GACd,IAAM,IAGbP,GAASF,C","sources":["src/js/03-promises.js"],"sourcesContent":["    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    }\n\n    document.querySelector('.form').addEventListener('submit', (event) => {\n      event.preventDefault();\n\n      const delayInput = document.querySelector('input[name=\"delay\"]');\n      const stepInput = document.querySelector('input[name=\"step\"]');\n      const amountInput = document.querySelector('input[name=\"amount\"]');\n      const resultsDiv = document.getElementById('results');\n\n      const firstDelay = parseInt(delayInput.value);\n      const step = parseInt(stepInput.value);\n      const amount = parseInt(amountInput.value);\n\n      let delay = firstDelay;\n      for (let i = 1; i <= amount; i++) {\n        createPromise(i, delay)\n          .then(({ position, delay }) => {\n            const result = document.createElement('p');\n            result.textContent = `✅ Fulfilled promise ${position} in ${delay}ms`;\n            resultsDiv.appendChild(result);\n\n            setTimeout(() => {\n              result.remove();\n            }, 4000);\n          })\n          .catch(({ position, delay }) => {\n            const result = document.createElement('p');\n            result.textContent = `❌ Rejected promise ${position} in ${delay}ms`;\n            resultsDiv.appendChild(result);\n\n            setTimeout(() => {\n              result.remove();\n            }, 10000);\n          });\n\n        delay += step;\n      }\n    });\n\n\n\n\n    \n//  function createPromise(position, delay) {\n//       return new Promise((resolve, reject) => {\n//         const shouldResolve = Math.random() > 0.3;\n//         setTimeout(() => {\n//           if (shouldResolve) {\n//             resolve({ position, delay });\n//           } else {\n//             reject({ position, delay });\n//           }\n//         }, delay);\n//       });\n//     }\n\n//     document.querySelector('.form').addEventListener('submit', function (event) {\n//       event.preventDefault();\n\n//       const delayInput = this.elements['delay'];\n//       const stepInput = this.elements['step'];\n//       const amountInput = this.elements['amount'];\n\n//       const firstDelay = parseInt(delayInput.value);\n//       const step = parseInt(stepInput.value);\n//       const amount = parseInt(amountInput.value);\n\n//       let delay = firstDelay;\n//       for (let i = 1; i <= amount; i++) {\n//         createPromise(i, delay)\n//           .then(({ position, delay }) => {\n//             console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//           })\n//           .catch(({ position, delay }) => {\n//             console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//           });\n\n//         delay += step;\n//       }\n//     });\n\n\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","resultsDiv","getElementById","firstDelay","parseInt","value","step","amount","delay1","i","then","result","createElement","textContent","appendChild","remove","catch"],"version":3,"file":"03-promises.1e0d11af.js.map"}